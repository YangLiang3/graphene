FROM ubuntu:16.04 AS graphene

# Add steps here to set up dependencies
RUN apt-get update \
     && apt-get -y --force-yes upgrade \ 
     && env DEBIAN_FRONTEND=noninteractive apt-get install -y \
       apache2-utils \
       autoconf \
       bison \
       build-essential \
       curl \
       flex \
       gawk \
       gettext \
       git \
       libapr1-dev \
       libaprutil1-dev \
       libexpat1 \
       libexpat1-dev \
       libnss-mdns \
       libomp-dev \
       libpcre2-dev \
       libpcre3-dev \
       libprotobuf-c-dev \
       libssl-dev \
       libxml2-dev \
       linux-headers-`uname -r` \
       net-tools \
       protobuf-c-compiler \
       python \
       python3-apport \
       python3-apt \
       python3-lxml \
       python3-minimal \
       python3-numpy \
       python3-pip \
       python3-pytest \
       python3-scipy \
       shellcheck \
       texinfo \
       wget \
       zlib1g \
       zlib1g-dev \
    && /usr/bin/pip3 install protobuf 

# Clone graphene
RUN git clone https://github.com/oscarlab/graphene.git

# Init submodules
RUN cd /graphene && git submodule init && git submodule update

# Create keys for signing
RUN cd /graphene/Pal/src/host/Linux-SGX/signer/ && openssl genrsa -3 -out enclave-key.pem 3072

# Create SGX driver for header files
RUN cd /graphene/Pal/src/host/Linux-SGX/sgx-driver \
    && git clone ${sgxdriver_repository} \
    && cd linux-sgx-driver \
    && git checkout ${sgxdriver_version} 

# Build Graphene-SGX
RUN cd /graphene &&  ISGX_DRIVER_PATH=linux-sgx-driver make SGX=1 ${DEBUG} WERROR=1

# Translate runtime symlinks to files
RUN for f in $$(find graphene/Runtime -type l);do cp --remove-destination $$(readlink $$f) $$f;done;

# Finished building Graphene
# ------------------------------------------